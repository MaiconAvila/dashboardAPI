// <auto-generated />
using System;
using DashboardAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DashboardAPI.Migrations
{
    [DbContext(typeof(DashboardContext))]
    [Migration("20221018012708_ChangeModelOrder2")]
    partial class ChangeModelOrder2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("DashboardAPI.Models.Demand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Demand");
                });

            modelBuilder.Entity("DashboardAPI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DemandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTeam")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameTeam")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DemandId");

                    b.HasIndex("TeamId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DashboardAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("DashboardAPI.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DemandId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DemandId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("DashboardAPI.Models.Order", b =>
                {
                    b.HasOne("DashboardAPI.Models.Demand", null)
                        .WithMany("Order")
                        .HasForeignKey("DemandId");

                    b.HasOne("DashboardAPI.Models.Team", null)
                        .WithMany("Order")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("DashboardAPI.Models.Product", b =>
                {
                    b.HasOne("DashboardAPI.Models.Order", null)
                        .WithMany("Product")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("DashboardAPI.Models.Team", b =>
                {
                    b.HasOne("DashboardAPI.Models.Demand", null)
                        .WithMany("Team")
                        .HasForeignKey("DemandId");
                });

            modelBuilder.Entity("DashboardAPI.Models.Demand", b =>
                {
                    b.Navigation("Order");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("DashboardAPI.Models.Order", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("DashboardAPI.Models.Team", b =>
                {
                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
